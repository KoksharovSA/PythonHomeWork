# Стоимость строки
#
# Дана строка текста. Напишите программу для подсчета стоимости строки, исходя
# из того, что один любой символ (в том числе пробел) стоит
# 60
# 60 копеек. Ответ дайте в рублях и копейках в соответствии с примерами.
#
# Формат входных данных
# На вход программе подается строка текста.
#
# Формат выходных данных
# Программа должна вывести стоимость строки.
#
# Тестовые данные
# Sample Input 1:
# Привет, как дела?!
# Sample Output 1:
# 10 р. 80 коп.
# Sample Input 2:
# Тимур - лучший математик на свете!!
# Sample Output 2:
# 21 р. 0 коп.

def task1(present_string):
    print(f'{int(60 * len(present_string) / 100)} руб. ' \
          f'{int(60 * len(present_string) % 100)} коп.')


task1('Привет, как дела?!')
task1('Тимур - лучший математик на свете!!')


# task1(input('Введите строку: '))
# Количество слов
#
# Дана строка, состоящая из слов, разделенных пробелами. Напишите программу,
# которая подсчитывает количество слов в этой строке.
#
# Формат входных данных
# На вход программе подается строка.
#
# Формат выходных данных
# Программа должна вывести количество слов в строке.
#
# Примечание 1. Кроме слов в тексте могут присутствовать только пробелы (один или несколько).
#
# Примечание 2. Решите задачу в одну строчку кода.
#
# Тестовые данные
# Sample Input 1:
# Hello world
# Sample Output 1:
# 2
# Sample Input 2:
# Timur forever young
# Sample Output 2:
# 3
def task2(present_string):
    # print(len([element.strip() for element in present_string.split(' ') if
    #            element != '']))
    print(len(present_string.split()))


task2('Hello    world')
task2('Timur forever young')


# На колесе рулетки карманы пронумерованы от 0 до 36. Ниже приведены цвета карманов:
#
# карман 0 зеленый;
# для карманов с 1 по 10 карманы с нечетным номером имеют красный цвет, карманы с четным номером – черный;
# для карманов с 11 по 18 карманы с нечетным номером имеют черный цвет, карманы с четным номером – красный;
# для карманов с 19 по 28 карманы с нечетным номером имеют красный цвет, карманы с четным номером – черный;
# для карманов с 29 по 36 карманы с нечетным номером имеют черный цвет, карманы с четным номером – красный.
# Напишите программу, которая считывает номер кармана и показывает, является ли этот карман зеленым, красным или черным. Программа должна вывести сообщение об ошибке, если пользователь вводит число, которое лежит вне диапазона от 0 до 36.
#
# Формат входных данных
# На вход программе подаётся одно целое число.
#
# Формат выходных данных
# Программа должна вывести цвет кармана либо сообщение «ошибка ввода», если
# введённое число лежит вне диапазона от 0 до 36.
def task3(number: int):
    print({number >= 1 and number <= 10 and number % 2 == 0: 'Чёрный',
           number >= 1 and number <= 10 and number % 2 != 0: 'Красный',
           number >= 11 and number <= 18 and number % 2 == 0: 'Красный',
           number >= 11 and number <= 18 and number % 2 != 0: 'Чёрный',
           number >= 19 and number <= 28 and number % 2 == 0: 'Чёрный',
           number >= 19 and number <= 28 and number % 2 != 0: 'Красный',
           number >= 29 and number <= 36 and number % 2 == 0: 'Красный',
           number >= 29 and number <= 36 and number % 2 != 0: 'Чёрный',
           number < 1 or number > 36: 'Ошибка ввода'
           }[True])


task3(4)
task3(5)
task3(14)
task3(15)
task3(55)


# Напишите программу, которая принимает на вход число N и выдаёт последовательность из N членов.
#
# *Пример:*
#
# - Для N = 5: 1, -3, 9, -27, 81
def task4(number):
    print([(-3) ** x for x in range(number)])


task4(5)


# Напишите программу, в которой пользователь будет задавать две строки,
# а программа - определять количество вхождений одной строки в другой.

def task5(string1, string2):
    print(string1.count(string2))


task5('asdasdasd', 'a')


# Для натурального n создать словарь индекс-значение, состоящий из элементов последовательности 3n + 1.
# *Пример:*
# - Для n = 6: {1: 4, 2: 7, 3: 10, 4: 13, 5: 16, 6: 19}
def task6(number):
    print(f'Для n = {number}: {dict(zip(range(1, number + 1), [3 * x + 1 for x in range(1, number + 1)]))}')

task6(6)
